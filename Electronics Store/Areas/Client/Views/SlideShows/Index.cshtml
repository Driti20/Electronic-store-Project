@using Electronics_Store.Helpers
@model PaginatedList<Electronics_Store.Areas.Client.Models.SlideShow>





@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h1>Slideshow images list</h1>

<p>
    <a class="btn btn-success btn-outline-primary text-white" asp-action="Create">Create New</a>
</p>

<div class="col-lg-4 mb-5">
    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Filter
        </button>
        <div class="dropdown-menu border-2 border-primary" aria-labelledby="dropdownMenuButton">
            <a class="dropdown-item" asp-action="Index" asp-route-status="Active">Status: Active</a>
            <a class="dropdown-item" asp-action="Index" asp-route-status="InActive">Status: InActive</a>
        </div>
    </div>
</div>
@if (ViewData["status"] != null)
{
    <div class="row mb-3">
        <h5 class="pl-3">Filtered by status "@ViewData["status"]"</h5>
        <a asp-action="Index" asp-route-status=" " class="text-secondary text-decoration-none ml-2">
            Remove filter <span aria-hidden="true">&times;</span>
        </a>
    </div>
}

<table class="table bg-light">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Status
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    <a class="btn btn-success" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-status="@ViewData["status"]"
   class="btn border border-secondary btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-status="@ViewData["status"]"
   class="btn border border-secondary btn-default @nextDisabled">
    Next
</a>
@section Scripts {
    <script>
        setTimeout(function () {
            $("#msg").fadeOut();
        }, 3500);
    </script>
}