@using Electronics_Store.Helpers
@model PaginatedList<Electronics_Store.Areas.ProductArea.Models.Brand>

@{
    ViewData["Title"] = "Brands";
    Layout = "~/Areas/ProductArea/Views/Shared/_Layout.cshtml";
}

<h1>All Brands</h1>

<p>
    <a class="btn btn-success btn-outline-primary text-white" asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a class="text-decoration-none" asp-action="Index">Back to Full List</a>
        </p>
        @if (TempData["NoBrandsFoundOnFilter"] != null)
        {
            <p id="msg" class="text-warning">
                @TempData["NoBrandsFoundOnFilter"]
            </p>
        }
    </div>
</form>
<table class="table bg-light">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                Date Created
            </th>
            <th>
                Date Modified
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModifiedDate)
                </td>
                <td>
                    <a class="btn btn-success" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn border border-secondary btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn border border-secondary btn-default @nextDisabled">
    Next
</a>
@section Scripts {
    <script>
        setTimeout(function () {
            $("#msg").fadeOut();
        }, 3500);
    </script>
}